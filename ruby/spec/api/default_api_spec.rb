=begin
#Coinmarketcap API Swagger Implementation

#Define coinmarketcap's api in swagger 2.0 openapi standard

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for CoinmarketcapAPI::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = CoinmarketcapAPI::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(CoinmarketcapAPI::DefaultApi)
    end
  end

  # unit tests for cryptocurrency_info_get
  # Get metadata
  # Returns all static metadata for one or more cryptocurrencies including name, symbol, logo, and its various registered URLs.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id One or more comma-separated CoinMarketCap cryptocurrency IDs. Example: \&quot;1,2\&quot;
  # @option opts [String] :symbol Alternatively pass one or more comma-separated cryptocurrency symbols. Example: \&quot;BTC,ETH\&quot;. At least one \&quot;id\&quot; or \&quot;symbol\&quot; is required.
  # @return [InlineResponse2003]
  describe 'cryptocurrency_info_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cryptocurrency_map_get
  # Get CoinMarketCap ID map
  # Returns a paginated list of all cryptocurrencies by CoinMarketCap ID. We recommend using this convenience endpoint to lookup and utilize our unique cryptocurrency id across all endpoints as typical identifiers like ticker symbols can match multiple cryptocurrencies and change over time. As a convenience you may pass a comma-separated list of cryptocurrency symbols as symbol to filter this list to only those you require.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :listing_status Only active coins are returned by default. Pass &#39;inactive&#39; to get a list of coins that are no longer active.
  # @option opts [Integer] :start Optionally offset the start (1-based index) of the paginated list of items to return.
  # @option opts [Integer] :limit Optionally specify the number of results to return. Use this parameter and the \&quot;start\&quot; parameter to determine your own pagination size.
  # @option opts [String] :symbol Optionally pass a comma-separated list of cryptocurrency symbols to return CoinMarketCap IDs for. If this option is passed, other options will be ignored.
  # @return [InlineResponse2002]
  describe 'cryptocurrency_map_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
