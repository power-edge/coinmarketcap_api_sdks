=begin
#Coinmarketcap API Swagger Implementation

#Define coinmarketcap's api in swagger 2.0 openapi standard

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

# Common files
require 'coinmarketcap_client/api_client'
require 'coinmarketcap_client/api_error'
require 'coinmarketcap_client/version'
require 'coinmarketcap_client/configuration'

# Models
require 'coinmarketcap_client/models/cryptocurrency_info'
require 'coinmarketcap_client/models/cryptocurrency_info_urls'
require 'coinmarketcap_client/models/cryptocurrency_listings'
require 'coinmarketcap_client/models/cryptocurrency_map'
require 'coinmarketcap_client/models/global_metrics_historical_quote'
require 'coinmarketcap_client/models/global_metrics_quote'
require 'coinmarketcap_client/models/global_metrics_quotes_historical'
require 'coinmarketcap_client/models/global_metrics_quotes_latest'
require 'coinmarketcap_client/models/inline_response_200'
require 'coinmarketcap_client/models/inline_response_200_1'
require 'coinmarketcap_client/models/inline_response_200_2'
require 'coinmarketcap_client/models/inline_response_200_3'
require 'coinmarketcap_client/models/inline_response_200_4'
require 'coinmarketcap_client/models/inline_response_200_4_data'
require 'coinmarketcap_client/models/inline_response_200_5'
require 'coinmarketcap_client/models/inline_response_200_6'
require 'coinmarketcap_client/models/inline_response_200_7'
require 'coinmarketcap_client/models/inline_response_200_8'
require 'coinmarketcap_client/models/inline_response_200_9'
require 'coinmarketcap_client/models/inline_response_default'
require 'coinmarketcap_client/models/inline_response_default_1'
require 'coinmarketcap_client/models/platform'
require 'coinmarketcap_client/models/quote'
require 'coinmarketcap_client/models/status'

# APIs
require 'coinmarketcap_client/api/default_api'

module CoinmarketcapClient
  class << self
    # Customize default settings for the SDK using block.
    #   CoinmarketcapClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
